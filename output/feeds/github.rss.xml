<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Chris Albon - Data Science, Machine Learning, and Artificial Intelligence</title><link>http://chrisalbon.com/</link><description></description><lastBuildDate>Sun, 01 May 2016 12:00:00 -0700</lastBuildDate><item><title>GitHub Cheatsheet</title><link>http://chrisalbon.com/github/github_cheatsheet.html</link><description>&lt;h2&gt;Find The Version Of Git&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git --version&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Create A New Git Repository&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Go to the fold of the project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;git init&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Clone An Existing Git Repository&lt;/h2&gt;
&lt;p&gt;Cloning is the process of pulling down a copy of a repository stored on a server.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Go to the parent folder of where you want to repository's folder to be in.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git clone [url to repository's git file] [name of folder / repository you want]&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Check The Status Of A Git Repository&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git status&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Tell Git To Track A File&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git add readme.md&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Make A Commit&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git commit --m "First commit"&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Tell Git To Track A Whole Folder&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git add chapter2/&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Tell Git To Track (And Stage) All Files And Subfolders In A Directory&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git add -A&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;View All Branches&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git branch&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Create A New Branch&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git branch new_model&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Switch To A Branch&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git checkout new_model&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Create A New Branch And Switch To It&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git checkout -b new_ux&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Merge One Branch Into Another&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Switch to the branch you want to pull changes into: &lt;code&gt;git checkout master&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pull changes from another branch into your branch: &lt;code&gt;git merge new_ux&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Set A Remote Github Repository&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Go to GitHub.com and create a new repository.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set that repository's url as the origin repo: &lt;code&gt;git remote add origin https://github.com/chrisalbon/git_tutorial.git&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Push Master Branch To A Github Repository&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;-u&lt;/code&gt; sets the origin as the default for this branch&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git push -u origin master&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Pull Down From A Branch From A GitHub Repository To Local Repository&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git pull origin master&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Pull Down All Branches From GitHub&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git fetch origin&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;View All Remote Branches&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git branch --remote&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;View Log&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git log&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;View Unstagged Changes To Files&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git diff&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Unstage A File&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git reset filename&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Undo Last Commit, Move Commits Changes To Staging&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git reset --soft HEAD^&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Undo Last Commit, Remove All Changes In Your Working Directory&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git reset --hard HEAD^&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Clone A Remote Repository Locally&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git clone url&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Show Changes From A Particular Commit&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git show --pretty="format:" &amp;lt;commitID&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Revert A Commit By Creating A New Commit With Opposite Changes&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git revert &amp;lt;commitID&amp;gt;&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Albon</dc:creator><pubDate>Sun, 01 May 2016 12:00:00 -0700</pubDate><guid isPermaLink="false">tag:chrisalbon.com,2016-05-01:github/github_cheatsheet.html</guid><category>Basics</category></item></channel></rss>