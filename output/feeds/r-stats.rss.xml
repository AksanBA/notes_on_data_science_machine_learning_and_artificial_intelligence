<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Chris Albon - Data Science, Machine Learning, and Artificial Intelligence</title><link>http://chrisalbon.com/</link><description></description><lastBuildDate>Sun, 01 May 2016 12:00:00 -0700</lastBuildDate><item><title>Two Way Frequency Table</title><link>http://chrisalbon.com/r-stats/2-way-frequency-table.html</link><description>&lt;p&gt;&lt;a href="http://www.statmethods.net/stats/frequencies.html"&gt;Original source&lt;/a&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Create some data&lt;/span&gt;
A &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;no&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;no&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;no&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;no&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
B &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;male&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;female&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;female&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;male&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;male&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;male&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;male&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;male&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# A will be rows, B will be columns&lt;/span&gt;
mytable &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;A&lt;span class="p"&gt;,&lt;/span&gt;B&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# print table&lt;/span&gt;
mytable
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;     B
A     female male
  no       1    3
  yes      1    3
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# A frequencies (summed over B)&lt;/span&gt;
&lt;span class="kp"&gt;margin.table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mytable&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;A
 no yes
  4   4
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# B frequencies (summed over A)&lt;/span&gt;
&lt;span class="kp"&gt;margin.table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mytable&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;B
female   male
     2      6
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# cell percentages&lt;/span&gt;
&lt;span class="kp"&gt;prop.table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mytable&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;     B
A     female  male
  no   0.125 0.375
  yes  0.125 0.375
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# row percentages&lt;/span&gt;
&lt;span class="kp"&gt;prop.table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mytable&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;     B
A     female male
  no    0.25 0.75
  yes   0.25 0.75
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# column percentages&lt;/span&gt;
&lt;span class="kp"&gt;prop.table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mytable&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;     B
A     female male
  no     0.5  0.5
  yes    0.5  0.5
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Albon</dc:creator><pubDate>Sun, 01 May 2016 12:00:00 -0700</pubDate><guid isPermaLink="false">tag:chrisalbon.com,2016-05-01:r-stats/2-way-frequency-table.html</guid><category>Data Visualization</category></item><item><title>2D Density Plot</title><link>http://chrisalbon.com/r-stats/2d-density-plot.html</link><description>&lt;p&gt;Original source: r graphics cookbook&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# load the gcookbook package for the data&lt;/span&gt;
&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;gcookbook&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# load the ggplot2 package&lt;/span&gt;
&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ggplot2&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# reset the graphing device&lt;/span&gt;
dev.off&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# create the ggplot2 data&lt;/span&gt;
p &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; ggplot&lt;span class="p"&gt;(&lt;/span&gt;faithful&lt;span class="p"&gt;,&lt;/span&gt; aes&lt;span class="p"&gt;(&lt;/span&gt;x &lt;span class="o"&gt;=&lt;/span&gt; eruptions&lt;span class="p"&gt;,&lt;/span&gt; y &lt;span class="o"&gt;=&lt;/span&gt; waiting&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="c1"&gt;# add a layer with the points&lt;/span&gt;
  geom_point&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="c1"&gt;# and a layer for the density heatmap with the alpha and the color determined by density (the .. refers to the fact that density is a variable that was created inside the ggplot() function)&lt;/span&gt;
  stat_density2d&lt;span class="p"&gt;(&lt;/span&gt;aes&lt;span class="p"&gt;(&lt;/span&gt;alpha&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;..&lt;/span&gt;density..&lt;span class="p"&gt;,&lt;/span&gt; fill&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;..&lt;/span&gt;density..&lt;span class="p"&gt;),&lt;/span&gt; geom&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tile&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; contour&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;null device
          1
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;p
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="http://chrisalbon.com/images/2d-density-plot_files/2d-density-plot_2_1.png" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Albon</dc:creator><pubDate>Sun, 01 May 2016 12:00:00 -0700</pubDate><guid isPermaLink="false">tag:chrisalbon.com,2016-05-01:r-stats/2d-density-plot.html</guid><category>Data Visualization</category></item><item><title>Adding Time To A Date</title><link>http://chrisalbon.com/r-stats/add-dates-to-a-date.html</link><description>&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# load the lubridate package&lt;/span&gt;
&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;lubridate&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# create a date variable&lt;/span&gt;
date.ex &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; dmy&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1/1/2001&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;date.ex
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[1] &amp;quot;2001-01-01 UTC&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# add 45 days to a date&lt;/span&gt;
date.ex.2 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; date.ex &lt;span class="o"&gt;+&lt;/span&gt; days&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;45&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;date.ex.2
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[1] &amp;quot;2001-02-15 UTC&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# add six weeks to a date&lt;/span&gt;
date.ex.3 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; date.ex &lt;span class="o"&gt;+&lt;/span&gt; weeks&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;date.ex.3
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[1] &amp;quot;2001-02-12 UTC&amp;quot;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Albon</dc:creator><pubDate>Sun, 01 May 2016 12:00:00 -0700</pubDate><guid isPermaLink="false">tag:chrisalbon.com,2016-05-01:r-stats/add-dates-to-a-date.html</guid><category>Data Wrangling</category></item><item><title>Adding labels to a ggplot2 bar graph</title><link>http://chrisalbon.com/r-stats/add-labels-to-bar-graph.html</link><description>&lt;p&gt;original source: r graphics cookbook&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# load the ggplot2 package&lt;/span&gt;
&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ggplot2&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# load the gcookbook package&lt;/span&gt;
&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;gcookbook&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Below the top&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# create a ggplot data&lt;/span&gt;
ggplot&lt;span class="p"&gt;(&lt;/span&gt;cabbage_exp&lt;span class="p"&gt;,&lt;/span&gt; aes&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;interaction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;Date&lt;span class="p"&gt;,&lt;/span&gt; Cultivar&lt;span class="p"&gt;),&lt;/span&gt; y&lt;span class="o"&gt;=&lt;/span&gt;Weight&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="c1"&gt;# draw the bar plot&lt;/span&gt;
  geom_bar&lt;span class="p"&gt;(&lt;/span&gt;stat&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;identity&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="c1"&gt;# create the weight text above the bar in white&lt;/span&gt;
  geom_text&lt;span class="p"&gt;(&lt;/span&gt;aes&lt;span class="p"&gt;(&lt;/span&gt;label&lt;span class="o"&gt;=&lt;/span&gt;Weight&lt;span class="p"&gt;),&lt;/span&gt; vjust&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; colour&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;white&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="http://chrisalbon.com/images/add-labels-to-bar-graph_files/add-labels-to-bar-graph_3_1.png" /&gt;&lt;/p&gt;
&lt;h2&gt;Above the top&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# create a ggplot data&lt;/span&gt;
ggplot&lt;span class="p"&gt;(&lt;/span&gt;cabbage_exp&lt;span class="p"&gt;,&lt;/span&gt; aes&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;interaction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;Date&lt;span class="p"&gt;,&lt;/span&gt; Cultivar&lt;span class="p"&gt;),&lt;/span&gt; y&lt;span class="o"&gt;=&lt;/span&gt;Weight&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="c1"&gt;# draw the bar plot&lt;/span&gt;
  geom_bar&lt;span class="p"&gt;(&lt;/span&gt;stat&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;identity&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="c1"&gt;# create the weight text below the bar in white&lt;/span&gt;
  geom_text&lt;span class="p"&gt;(&lt;/span&gt;aes&lt;span class="p"&gt;(&lt;/span&gt;label&lt;span class="o"&gt;=&lt;/span&gt;Weight&lt;span class="p"&gt;),&lt;/span&gt; vjust&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;-0.2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="http://chrisalbon.com/images/add-labels-to-bar-graph_files/add-labels-to-bar-graph_5_1.png" /&gt;&lt;/p&gt;
&lt;h1&gt;Labels on a grouped bar chart&lt;/h1&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# create the ggplot data for a grouped bar chart&lt;/span&gt;
ggplot&lt;span class="p"&gt;(&lt;/span&gt;cabbage_exp&lt;span class="p"&gt;,&lt;/span&gt; aes&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;=&lt;/span&gt;Date&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="o"&gt;=&lt;/span&gt;Weight&lt;span class="p"&gt;,&lt;/span&gt; fill&lt;span class="o"&gt;=&lt;/span&gt;Cultivar&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="c1"&gt;# plot the bars&lt;/span&gt;
  geom_bar&lt;span class="p"&gt;(&lt;/span&gt;stat&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;identity&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; position&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;dodge&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="c1"&gt;# create the label, &amp;quot;dodged&amp;quot; to fit the bars&lt;/span&gt;
  geom_text&lt;span class="p"&gt;(&lt;/span&gt;aes&lt;span class="p"&gt;(&lt;/span&gt;label&lt;span class="o"&gt;=&lt;/span&gt;Weight&lt;span class="p"&gt;),&lt;/span&gt; vjust&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; colour&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;white&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            position&lt;span class="o"&gt;=&lt;/span&gt;position_dodge&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;.9&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; size&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ymax not defined: adjusting position using y instead
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="http://chrisalbon.com/images/add-labels-to-bar-graph_files/add-labels-to-bar-graph_7_2.png" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Albon</dc:creator><pubDate>Sun, 01 May 2016 12:00:00 -0700</pubDate><guid isPermaLink="false">tag:chrisalbon.com,2016-05-01:r-stats/add-labels-to-bar-graph.html</guid><category>Data Visualization</category></item><item><title>Adding Levels To A Factor</title><link>http://chrisalbon.com/r-stats/add-levels-to-factors.html</link><description>&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# create simulated distract name data&lt;/span&gt;
district &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;NORTH&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;NORTHWEST&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;CENTRAL&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;SOUTH&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;SOUTHWEST&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;EAST&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# remake district categories with the combination of district categories and a new SOUTH CENTRAL category&lt;/span&gt;
&lt;span class="kp"&gt;levels&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;district&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;district&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;SOUTH CENTRAL&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kp"&gt;levels&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;district&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[1] &amp;quot;NORTH&amp;quot;         &amp;quot;NORTHWEST&amp;quot;     &amp;quot;CENTRAL&amp;quot;       &amp;quot;SOUTH&amp;quot;        
[5] &amp;quot;SOUTHWEST&amp;quot;     &amp;quot;EAST&amp;quot;          &amp;quot;SOUTH CENTRAL&amp;quot;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Albon</dc:creator><pubDate>Sun, 01 May 2016 12:00:00 -0700</pubDate><guid isPermaLink="false">tag:chrisalbon.com,2016-05-01:r-stats/add-levels-to-factors.html</guid><category>Basics</category></item><item><title>Aggregate Data By Week Or Month</title><link>http://chrisalbon.com/r-stats/aggregate-by-week-or-month.html</link><description>&lt;p&gt;original source: http://stackoverflow.com/questions/19716244/aggregate-data-by-week-month-etc-in-r?lq=1&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# load the xts package&lt;/span&gt;
&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;xts&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Loading required package: zoo

Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Create some simulated data&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# create an element for every year between two dates&lt;/span&gt;
date &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;as.Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2006-01-01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kp"&gt;as.Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2007-01-01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; by &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;1 day&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# create some simulated values&lt;/span&gt;
score &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; runif&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;366&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# create a zoo time series object of score and ata&lt;/span&gt;
zoo &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; zoo&lt;span class="p"&gt;(&lt;/span&gt;score&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Create some averages&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# create a weekly average&lt;/span&gt;
weekly.avg &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; apply.weekly&lt;span class="p"&gt;(&lt;/span&gt;zoo&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;weekly.avg
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;2006-01-01 2006-01-08 2006-01-15 2006-01-22 2006-01-29 2006-02-05 2006-02-12
 0.6463105  0.3696941  0.4492466  0.5587588  0.3330893  0.7490642  0.3463500
2006-02-19 2006-02-26 2006-03-05 2006-03-12 2006-03-19 2006-03-26 2006-04-02
 0.4594144  0.3015816  0.5016827  0.3824588  0.4501046  0.5086366  0.6927037
2006-04-09 2006-04-16 2006-04-23 2006-04-30 2006-05-07 2006-05-14 2006-05-21
 0.5238080  0.6618441  0.4366701  0.6187016  0.6110044  0.5724795  0.5267836
2006-05-28 2006-06-04 2006-06-11 2006-06-18 2006-06-25 2006-07-02 2006-07-09
 0.4003268  0.3999404  0.6366840  0.4546525  0.5675619  0.4411083  0.5747285
2006-07-16 2006-07-23 2006-07-30 2006-08-06 2006-08-13 2006-08-20 2006-08-27
 0.4136250  0.4936679  0.4814989  0.4419165  0.3644543  0.6385395  0.5230308
2006-09-03 2006-09-10 2006-09-17 2006-09-24 2006-10-01 2006-10-08 2006-10-15
 0.5259253  0.5474812  0.4658602  0.4771834  0.6106620  0.4471343  0.4576065
2006-10-22 2006-10-29 2006-11-05 2006-11-12 2006-11-19 2006-11-26 2006-12-03
 0.6124155  0.5418694  0.3136825  0.4227544  0.2406943  0.3723846  0.6079556
2006-12-10 2006-12-17 2006-12-24 2006-12-31 2007-01-01
 0.5289365  0.4426345  0.6362102  0.4849858  0.1102631
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# create a monthly average&lt;/span&gt;
monthly.avg &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; apply.monthly&lt;span class="p"&gt;(&lt;/span&gt;zoo&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;monthly.avg
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;2006-01-31 2006-02-28 2006-03-31 2006-04-30 2006-05-31 2006-06-30 2006-07-31
 0.4636550  0.4345047  0.4883293  0.5791776  0.5045688  0.5301847  0.4698487
2006-08-31 2006-09-30 2006-10-31 2006-11-30 2006-12-31 2007-01-01
 0.5033712  0.5218908  0.5171836  0.3661705  0.5341010  0.1102631
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Albon</dc:creator><pubDate>Sun, 01 May 2016 12:00:00 -0700</pubDate><guid isPermaLink="false">tag:chrisalbon.com,2016-05-01:r-stats/aggregate-by-week-or-month.html</guid><category>Data Wrangling</category></item><item><title>Annotating Plots</title><link>http://chrisalbon.com/r-stats/annotating-plots.html</link><description>&lt;p&gt;Original source: r graphics cookbook&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# load the gcookbook package for the data&lt;/span&gt;
&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;gcookbook&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# load the ggplot2 package&lt;/span&gt;
&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ggplot2&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# reset the graphing device&lt;/span&gt;
dev.off&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;quartz_off_screen
                3
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# create the ggplot2 data&lt;/span&gt;
p &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; ggplot&lt;span class="p"&gt;(&lt;/span&gt;faithful&lt;span class="p"&gt;,&lt;/span&gt; aes&lt;span class="p"&gt;(&lt;/span&gt;x &lt;span class="o"&gt;=&lt;/span&gt; eruptions&lt;span class="p"&gt;,&lt;/span&gt; y &lt;span class="o"&gt;=&lt;/span&gt; waiting&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Add Text&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# create the ggplot2 plot&lt;/span&gt;
p &lt;span class="o"&gt;+&lt;/span&gt; geom_point&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="c1"&gt;# add text&lt;/span&gt;
  annotate&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; x &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; y &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;48&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; label&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Group 1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; family&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;serif&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; fontface&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;italic&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; colour&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;darkred&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; size&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="c1"&gt;# add more text&lt;/span&gt;
  annotate&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; x &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;4.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; y &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;66&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; label&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Group 2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; family&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;serif&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; fontface&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;italic&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; colour&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;darkred&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; size&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Add Mathematical Expressions&lt;/span&gt;

&lt;span class="c1"&gt;# create the ggplot2 plot&lt;/span&gt;
p &lt;span class="o"&gt;+&lt;/span&gt; geom_point&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="c1"&gt;# add the formula, parse=TRUE turns the next into a formula&lt;/span&gt;
  annotate&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; x &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;4.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; y &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;66&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; parse &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; label &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;frac(1, sqrt(2 * pi)) * e ^ {-x^2 / 2}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="http://chrisalbon.com/images/annotating-plots_files/annotating-plots_4_1.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="png" src="http://chrisalbon.com/images/annotating-plots_files/annotating-plots_4_3.png" /&gt;&lt;/p&gt;
&lt;h2&gt;Add Mathematical Expressions&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# create the ggplot2 plot&lt;/span&gt;
p &lt;span class="o"&gt;+&lt;/span&gt; geom_point&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="c1"&gt;# add the formula, parse=TRUE turns the next into a formula&lt;/span&gt;
  annotate&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; x &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;4.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; y &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;66&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; parse &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; label &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;frac(1, sqrt(2 * pi)) * e ^ {-x^2 / 2}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="http://chrisalbon.com/images/annotating-plots_files/annotating-plots_6_1.png" /&gt;&lt;/p&gt;
&lt;h2&gt;Add Lines&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# load the grid package to create the flat ends of the line seqment and arrow&lt;/span&gt;
&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;grid&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# create the ggplot2 plot&lt;/span&gt;
p &lt;span class="o"&gt;+&lt;/span&gt; geom_point&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="c1"&gt;# add a horizontal line at y = 66&lt;/span&gt;
  geom_hline&lt;span class="p"&gt;(&lt;/span&gt;yintercept &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;66&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="c1"&gt;# add a vertical line at 3 = 3&lt;/span&gt;
  geom_vline&lt;span class="p"&gt;(&lt;/span&gt;xintercept &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="c1"&gt;# add an angled line&lt;/span&gt;
  geom_abline&lt;span class="p"&gt;(&lt;/span&gt;intercept &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;37.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; slope &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;9&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="c1"&gt;# add a line segment&lt;/span&gt;
  annotate&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;segment&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; x &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; xend &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; y &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; yend &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; arrow&lt;span class="o"&gt;=&lt;/span&gt;arrow&lt;span class="p"&gt;(&lt;/span&gt;ends&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;both&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; angle&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; length&lt;span class="o"&gt;=&lt;/span&gt;unit&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;cm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="c1"&gt;# add an arrow&lt;/span&gt;
  annotate&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;segment&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; x &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; xend &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; y &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; yend &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;55&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; colour&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; size&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; arrow&lt;span class="o"&gt;=&lt;/span&gt;arrow&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="http://chrisalbon.com/images/annotating-plots_files/annotating-plots_8_1.png" /&gt;&lt;/p&gt;
&lt;h2&gt;Add A Shaded Rectangle&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# create the ggplot2 plot&lt;/span&gt;
p &lt;span class="o"&gt;+&lt;/span&gt; geom_point&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="c1"&gt;# add a shaped blue rectangle&lt;/span&gt;
  annotate&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;rect&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; xmin&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; xmax&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; ymin&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; ymax&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; alpha&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; fill&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="http://chrisalbon.com/images/annotating-plots_files/annotating-plots_10_1.png" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Albon</dc:creator><pubDate>Sun, 01 May 2016 12:00:00 -0700</pubDate><guid isPermaLink="false">tag:chrisalbon.com,2016-05-01:r-stats/annotating-plots.html</guid><category>Data Visualization</category></item><item><title>Apply A Function On Every Row Of A Dataframe</title><link>http://chrisalbon.com/r-stats/apply-function-to-every-row.html</link><description>&lt;p&gt;original source: http://stackoverflow.com/questions/2074606/doing-a-plyr-operation-on-every-row-of-a-data-frame-in-r&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Load packages&lt;/span&gt;
&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;plyr&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# create a simulated dataframe&lt;/span&gt;
x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
y &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
df &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;data.frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt;y&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# array to dataframe apply, on df, for each row, apply transform() to create a variable called &amp;quot;max&amp;quot; whose values are the maximum value of x or y (whichever is higher).&lt;/span&gt;
adply&lt;span class="p"&gt;(&lt;/span&gt;df&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; max &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;            x          y        max
1  -1.0286311  0.6621974  0.6621974
2   0.5466022  0.2977963  0.5466022
3  -0.6559125 -2.0830247 -0.6559125
4  -1.6942847 -0.2205220 -0.2205220
5   2.2678281 -0.4791234  2.2678281
6  -1.6849528 -0.4873940 -0.4873940
7   1.1627351  0.5137251  1.1627351
8   1.4182618  0.9697840  1.4182618
9   0.2025052 -0.3519337  0.2025052
10 -0.7100003 -0.6827529 -0.6827529
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Albon</dc:creator><pubDate>Sun, 01 May 2016 12:00:00 -0700</pubDate><guid isPermaLink="false">tag:chrisalbon.com,2016-05-01:r-stats/apply-function-to-every-row.html</guid><category>Basics</category></item><item><title>Using apply, sapply, and lapply</title><link>http://chrisalbon.com/r-stats/apply-lapply-sapply.html</link><description>&lt;p&gt;Original source: http://www.r-bloggers.com/using-apply-sapply-lapply-in-r/&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Create some data&lt;/span&gt;
data &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;data&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;cbind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;25&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; nrow&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; ncol&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Apply&lt;/h2&gt;
&lt;p&gt;The apply function performs some action on a block of values. Note, all the values must be of the same data type (e.g. numeric, string, etc.). If they contain both numeric and string, the numeric values will be converted into strings before the function is applied.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Find mean value of each row (denoted by &amp;quot;1&amp;quot;)&lt;/span&gt;
&lt;span class="kp"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;data&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  [1] 24.59901 26.20459 25.24876 24.70247 24.16932 24.81458 24.52746 25.41626
  [9] 25.46790 25.10375 24.70040 24.45695 25.34161 25.13964 24.75298 25.19169
 [17] 24.23966 25.04549 25.79292 23.79149 25.14577 24.69546 25.24540 24.63793
 [25] 25.25698 25.16858 24.98593 25.76139 24.90628 24.99306 24.62098 25.04368
 [33] 24.46879 25.25711 25.18968 24.73647 25.36020 24.75081 24.71036 25.78176
 [41] 23.90849 24.28943 24.96408 23.59350 25.23699 24.64131 25.20141 24.77597
 [49] 25.35063 24.94441 25.32127 26.06588 24.89428 25.04112 24.10786 25.55573
 [57] 25.01078 24.43195 25.15557 24.85495 25.07362 24.83866 25.13600 25.20097
 [65] 24.86642 23.31778 25.00892 25.03551 25.21849 25.14255 26.10872 25.98042
 [73] 25.56874 25.23941 24.29674 24.91502 24.49740 24.61255 24.14655 24.59718
 [81] 24.90140 25.91023 24.92573 24.23798 24.52005 25.66280 24.22381 25.19263
 [89] 24.54775 24.96474 24.50890 25.30642 25.47648 24.69407 25.57084 24.71331
 [97] 25.22384 24.40210 25.25857 24.73543
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Find mean value of each column (denoted by &amp;quot;2&amp;quot;)&lt;/span&gt;
&lt;span class="kp"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;data&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[1]  0.09619052 24.89715930 49.84308683
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Find mean of reach additional value. That is, apply the mean() functions to each individual observation instead of entire rows or entire columns (denoted by &amp;quot;1:2&amp;quot;)&lt;/span&gt;
&lt;span class="kp"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;data&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;               [,1]     [,2]     [,3]
  [1,] -1.568708977 25.19731 50.16843
  [2,]  1.150529977 25.82535 51.63790
  [3,]  0.977275865 24.50395 50.26505
  [4,] -0.263941077 24.75872 49.61265
  [5,] -0.757359741 24.43448 48.83085
  [6,]  0.632602125 24.57053 49.24061
  [7,] -0.244478069 24.63318 49.19367
  [8,] -0.614889100 25.05391 51.80975
  [9,] -0.592501893 26.41062 50.58558
 [10,]  0.052256014 24.92898 50.33003
 [11,] -0.507014529 24.75101 49.85721
 [12,]  0.473880143 24.26357 48.63340
 [13,]  2.615240491 25.42869 47.98090
 [14,] -0.350429812 25.74276 50.02659
 [15,]  0.661601288 24.33628 49.26105
 [16,]  0.797786704 24.39170 50.38559
 [17,] -1.015018178 23.70737 50.02661
 [18,]  0.331179662 25.62967 49.17563
 [19,]  1.255608573 25.30459 50.81856
 [20,] -2.162252797 25.38918 48.14754
 [21,]  0.525101996 24.14938 50.76283
 [22,]  0.247228755 24.87424 48.96490
 [23,]  1.196517482 24.49384 50.04583
 [24,]  0.588874298 23.34821 49.97671
 [25,] -0.902219593 25.60770 51.06546
 [26,] -0.383807172 26.20012 49.68944
 [27,] -1.427233324 25.75519 50.62983
 [28,]  1.050320147 25.28623 50.94763
 [29,] -0.599947956 26.38403 48.93474
 [30,] -0.302622507 25.55671 49.72508
 [31,]  0.019930217 23.56713 50.27587
 [32,]  0.883376538 25.30232 48.94533
 [33,]  0.840728908 23.36012 49.20553
 [34,]  1.366500062 23.14374 51.26110
 [35,]  0.176682690 25.19876 50.19360
 [36,] -0.811892248 24.28875 50.73254
 [37,] -0.274652977 24.22998 52.12526
 [38,] -0.157275521 24.89746 49.51226
 [39,]  0.132177317 24.87886 49.12005
 [40,]  1.136077454 25.41962 50.78960
 [41,] -1.300481517 24.50820 48.51774
 [42,] -0.383029453 22.84781 50.40350
 [43,]  0.099370222 25.41390 49.37896
 [44,] -2.050115390 23.07011 49.76051
 [45,]  0.501352187 25.41343 49.79617
 [46,]  0.009760826 24.30647 49.60769
 [47,] -0.064267636 25.58423 50.08428
 [48,]  0.317009746 24.11671 49.89420
 [49,] -0.229239652 25.26184 51.01928
 [50,]  0.458235055 24.48696 49.88805
 [51,]  0.076155053 25.44080 50.44686
 [52,]  0.734427587 26.65986 50.80336
 [53,] -0.084391861 25.56510 49.20214
 [54,] -0.400739985 25.20466 50.31946
 [55,]  0.620316321 23.12588 48.57738
 [56,] -0.369067753 26.46223 50.57403
 [57,]  0.583869219 24.85391 49.59456
 [58,] -1.012146164 23.52167 50.78632
 [59,] -0.176942984 25.33134 50.31231
 [60,]  1.031038799 23.63650 49.89732
 [61,]  0.291820274 24.04088 50.88817
 [62,] -0.286363289 26.31617 48.48616
 [63,]  0.295092879 25.12000 49.99292
 [64,]  1.738129994 25.47344 48.39135
 [65,] -1.444422908 25.03078 51.01289
 [66,] -1.992472026 23.99107 47.95475
 [67,] -0.126062864 24.88056 50.27226
 [68,]  1.511624181 24.90431 48.69059
 [69,]  0.407953425 24.83007 50.41746
 [70,]  0.729027047 25.18040 49.51824
 [71,]  1.614534378 26.13329 50.57833
 [72,]  1.528257134 25.48461 50.92839
 [73,]  0.185587393 25.58042 50.94020
 [74,]  0.035201742 25.84610 49.83694
 [75,] -0.220080957 25.49684 47.61347
 [76,]  0.751172599 24.12418 49.86970
 [77,] -0.706358939 24.17086 50.02771
 [78,] -0.748064620 25.79963 48.78608
 [79,] -0.763060888 23.32252 49.88018
 [80,]  0.813353831 24.79051 48.18769
 [81,]  0.327942825 23.91075 50.46549
 [82,]  2.386272878 25.54947 49.79496
 [83,]  1.099094285 25.26427 48.41382
 [84,]  0.487128984 24.79840 47.42842
 [85,] -0.921897261 25.64221 48.83984
 [86,]  1.619382465 24.87703 50.49199
 [87,] -2.430495109 25.74597 49.35596
 [88,]  0.136899216 25.98202 49.45896
 [89,] -1.055246874 23.77861 50.91988
 [90,] -0.691470394 24.56741 51.01827
 [91,]  0.019588244 24.59630 48.91080
 [92,] -0.070343647 25.54222 50.44737
 [93,]  0.432749908 24.74199 51.25470
 [94,]  0.678025865 23.27195 50.13224
 [95,]  0.405506770 27.02547 49.28155
 [96,]  1.652979613 23.30071 49.18624
 [97,]  1.006041068 24.88392 49.78156
 [98,] -0.425817664 25.72349 47.90862
 [99,] -0.437871402 25.73701 50.47658
[100,] -0.750629736 24.24426 50.71267
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Sapply&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Sapply applies a function over each individual element in an object, returning a vector&lt;/span&gt;
&lt;span class="kp"&gt;sapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;data&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  [1] -1.568708977  1.150529977  0.977275865 -0.263941077 -0.757359741
  [6]  0.632602125 -0.244478069 -0.614889100 -0.592501893  0.052256014
 [11] -0.507014529  0.473880143  2.615240491 -0.350429812  0.661601288
 [16]  0.797786704 -1.015018178  0.331179662  1.255608573 -2.162252797
 [21]  0.525101996  0.247228755  1.196517482  0.588874298 -0.902219593
 [26] -0.383807172 -1.427233324  1.050320147 -0.599947956 -0.302622507
 [31]  0.019930217  0.883376538  0.840728908  1.366500062  0.176682690
 [36] -0.811892248 -0.274652977 -0.157275521  0.132177317  1.136077454
 [41] -1.300481517 -0.383029453  0.099370222 -2.050115390  0.501352187
 [46]  0.009760826 -0.064267636  0.317009746 -0.229239652  0.458235055
 [51]  0.076155053  0.734427587 -0.084391861 -0.400739985  0.620316321
 [56] -0.369067753  0.583869219 -1.012146164 -0.176942984  1.031038799
 [61]  0.291820274 -0.286363289  0.295092879  1.738129994 -1.444422908
 [66] -1.992472026 -0.126062864  1.511624181  0.407953425  0.729027047
 [71]  1.614534378  1.528257134  0.185587393  0.035201742 -0.220080957
 [76]  0.751172599 -0.706358939 -0.748064620 -0.763060888  0.813353831
 [81]  0.327942825  2.386272878  1.099094285  0.487128984 -0.921897261
 [86]  1.619382465 -2.430495109  0.136899216 -1.055246874 -0.691470394
 [91]  0.019588244 -0.070343647  0.432749908  0.678025865  0.405506770
 [96]  1.652979613  1.006041068 -0.425817664 -0.437871402 -0.750629736
[101] 25.197306545 25.825350781 24.503953832 24.758718674 24.434477602
[106] 24.570526558 24.633180740 25.053909206 26.410619962 24.928981884
[111] 24.751005799 24.263566175 25.428692964 25.742763722 24.336277408
[116] 24.391703303 23.707374457 25.629673993 25.304587483 25.389176630
[121] 24.149383170 24.874239009 24.493836724 23.348211090 25.607700571
[126] 26.200116013 25.755185549 25.286226101 26.384032256 25.556712376
[131] 23.567129337 25.302324415 23.360122623 23.143743252 25.198758203
[136] 24.288745427 24.229984320 24.897463124 24.878858415 25.419617225
[141] 24.508196500 22.847811945 25.413903990 23.070107275 25.413433368
[146] 24.306468586 25.584229464 24.116708141 25.261839601 24.486956445
[151] 25.440800049 26.659857557 25.565101945 25.204656283 23.125881246
[156] 26.462228263 24.853909780 23.521668193 25.331337679 23.636499726
[161] 24.040880917 26.316172578 25.119996193 25.473437131 25.030778969
[166] 23.991070971 24.880564659 24.904307929 24.830074007 25.180398308
[171] 26.133289979 25.484612200 25.580424723 25.846103841 25.496839595
[176] 24.124179656 24.170857114 25.799628759 23.322523521 24.790511111
[181] 23.910751115 25.549466633 25.264265733 24.798400630 25.642209925
[186] 24.877027823 25.745973119 25.982021165 23.778612923 24.567407556
[191] 24.596298326 25.542218418 24.741988971 23.271952314 27.025469544
[196] 23.300710553 24.883916973 25.723485456 25.737009580 24.244258255
[201] 50.168431849 51.637900971 50.265045566 49.612645844 48.830848358
[206] 49.240613619 49.193669941 51.809750441 50.585582341 50.330025798
[211] 49.857207672 48.633404522 47.980896119 50.026593960 49.261052113
[216] 50.385585194 50.026611946 49.175626026 50.818555563 48.147539082
[221] 50.762826545 48.964901402 50.045832988 49.976713639 51.065456311
[226] 49.689440608 50.629825924 50.947626860 48.934744168 49.725079985
[231] 50.275872304 48.945331047 49.205531669 51.261095381 50.193603345
[236] 50.732543196 52.125259556 49.512255163 49.120047270 50.789598761
[241] 48.517741319 50.403500715 49.378962367 49.760507109 49.796171242
[246] 49.607690616 50.084275217 49.894199065 51.019282225 49.888051966
[251] 50.446861713 50.803355703 49.202143279 50.319458013 48.577378982
[256] 50.574032023 49.594563809 50.786319423 50.312312319 49.897318172
[261] 50.888168155 48.486159534 49.992922240 48.391347666 51.012893420
[266] 47.954752646 50.272263973 48.690586502 50.417455451 49.518237586
[271] 50.578329878 50.928392627 50.940201968 49.836937110 47.613474293
[276] 49.869701038 50.027708980 48.786075248 49.880176985 48.187685772
[281] 50.465491452 49.794963712 48.413817125 47.428420395 48.839838668
[286] 50.491987788 49.355956225 49.458958967 50.919880652 51.018268137
[291] 48.910802035 50.447373239 51.254699133 50.132239055 49.281546656
[296] 49.186239840 49.781557088 47.908620364 50.476582295 50.712671097
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Lapply&lt;/h2&gt;
&lt;p&gt;Lapply applies a function of each individual element in an object, returning a list&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Create a list with two elements&lt;/span&gt;
l &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;a &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; b &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Apply the sum function to each list&lt;/span&gt;
&lt;span class="kp"&gt;lapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;l&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$a
[1] 55

$b
[1] 155
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Albon</dc:creator><pubDate>Sun, 01 May 2016 12:00:00 -0700</pubDate><guid isPermaLink="false">tag:chrisalbon.com,2016-05-01:r-stats/apply-lapply-sapply.html</guid><category>Basics</category></item><item><title>Advanced Applying With Plyr</title><link>http://chrisalbon.com/r-stats/apply-with-plyr.html</link><description>&lt;p&gt;&lt;strong&gt;The plyr package uses **ply() functions, where the first star in the input and the second star is the output. For example, llplyr takes a list in and spits a list out.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# load the plyr package&lt;/span&gt;
&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;plyr&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#generate some fake list data&lt;/span&gt;
war.name &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;WWII&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;WWII&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;WWI&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;WWI&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Franco-Prussian&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Franco-Prussian&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Franco-Prussian&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Boer War&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Boer War&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Boer War&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
deaths &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;938&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;9480&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2049&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1039&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3928&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;9202&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;10933&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;40293&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;10394&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;20394&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
allies &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
casualties &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;war.name&lt;span class="p"&gt;,&lt;/span&gt; deaths&lt;span class="p"&gt;,&lt;/span&gt; allies&lt;span class="p"&gt;)&lt;/span&gt;
casualties.df &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;data.frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;war.name&lt;span class="p"&gt;,&lt;/span&gt; deaths&lt;span class="p"&gt;,&lt;/span&gt; allies&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# split up the list by casualties, find all the unique elements, output them as a list&lt;/span&gt;
llply&lt;span class="p"&gt;(&lt;/span&gt;casualties&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[[1]]
[1] &amp;quot;WWII&amp;quot;            &amp;quot;WWI&amp;quot;             &amp;quot;Franco-Prussian&amp;quot; &amp;quot;Boer War&amp;quot;

[[2]]
 [1]   938  9480  2049  1039  3928  9202 10933 40293 10394 20394

[[3]]
[1] 9 5 4 6 3 2 1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;r*ply replaces replicate, with the * denoting the output&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# run runif(1) five times, outputting a data frame&lt;/span&gt;
rdply&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; runif&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  .n         V1
1  1 0.09292281
2  2 0.06861817
3  3 0.04870200
4  4 0.57864348
5  5 0.21716079
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;ddply replaces tapply, it inputs a data frame and outputs a data frame&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# take the data frame casualties.df, split it up by war.name (for some reasons it uses the .() function, the find the mean)&lt;/span&gt;
ddply&lt;span class="p"&gt;(&lt;/span&gt;
  casualties.df&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="m"&gt;.&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;war.name&lt;span class="p"&gt;),&lt;/span&gt;
  colwise&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;         war.name   deaths allies
1        Boer War 23693.67      2
2 Franco-Prussian  8021.00      3
3             WWI  1544.00      5
4            WWII  5209.00      7
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Albon</dc:creator><pubDate>Sun, 01 May 2016 12:00:00 -0700</pubDate><guid isPermaLink="false">tag:chrisalbon.com,2016-05-01:r-stats/apply-with-plyr.html</guid><category>Basics</category></item></channel></rss>