<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Chris Albon</title><link href="http://chrisalbon.com/" rel="alternate"></link><link href="http://chrisalbon.com/feeds/regex.atom.xml" rel="self"></link><id>http://chrisalbon.com/</id><updated>2016-05-01T12:00:00-07:00</updated><entry><title>Match A Symbol</title><link href="http://chrisalbon.com/regex/match_a_symbol.html" rel="alternate"></link><published>2016-05-01T12:00:00-07:00</published><updated>2016-05-01T12:00:00-07:00</updated><author><name>Chris Albon</name></author><id>tag:chrisalbon.com,2016-05-01:regex/match_a_symbol.html</id><summary type="html">&lt;p&gt;Based on: &lt;a href="http://shop.oreilly.com/product/0636920023630.do"&gt;Regular Expressions Cookbook&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Preliminaries&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Load regex package&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Create some text&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Create a variable containing a text string&lt;/span&gt;
&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;$100&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Apply regex&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Find all instances of the exact match &amp;#39;$&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;r&amp;#39;\$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[&amp;#39;$&amp;#39;]
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Basics"></category></entry><entry><title>Match A Unicode Character</title><link href="http://chrisalbon.com/regex/match_a_unicode_character.html" rel="alternate"></link><published>2016-05-01T12:00:00-07:00</published><updated>2016-05-01T12:00:00-07:00</updated><author><name>Chris Albon</name></author><id>tag:chrisalbon.com,2016-05-01:regex/match_a_unicode_character.html</id><summary type="html">&lt;p&gt;Based on: &lt;a href="http://shop.oreilly.com/product/0636920023630.do"&gt;Regular Expressions Cookbook&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Preliminaries&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Load regex package&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Create some text&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Create a variable containing a text string&lt;/span&gt;
&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Microsoft™.&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Apply regex&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Find any unicode character for a trademark&lt;/span&gt;
&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;r&amp;#39;\u2122&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[&amp;#39;™&amp;#39;]
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Basics"></category></entry><entry><title>Match A Word</title><link href="http://chrisalbon.com/regex/match_a_word.html" rel="alternate"></link><published>2016-05-01T12:00:00-07:00</published><updated>2016-05-01T12:00:00-07:00</updated><author><name>Chris Albon</name></author><id>tag:chrisalbon.com,2016-05-01:regex/match_a_word.html</id><summary type="html">&lt;p&gt;Based on: &lt;a href="http://shop.oreilly.com/product/0636920023630.do"&gt;Regular Expressions Cookbook&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Preliminaries&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Load regex package&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Create some text&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Create a variable containing a text string&lt;/span&gt;
&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;The quick brown fox jumped over the lazy brown bear.&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Apply regex&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Find any word of three letters&lt;/span&gt;
&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;r&amp;#39;\b...\b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[&amp;#39;The&amp;#39;, &amp;#39;fox&amp;#39;, &amp;#39;the&amp;#39;]
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Basics"></category></entry><entry><title>Match Any Character</title><link href="http://chrisalbon.com/regex/match_any_character.html" rel="alternate"></link><published>2016-05-01T12:00:00-07:00</published><updated>2016-05-01T12:00:00-07:00</updated><author><name>Chris Albon</name></author><id>tag:chrisalbon.com,2016-05-01:regex/match_any_character.html</id><summary type="html">&lt;p&gt;Based on: &lt;a href="http://shop.oreilly.com/product/0636920023630.do"&gt;Regular Expressions Cookbook&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Preliminaries&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Load regex package&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Create some text&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Create a variable containing a text string&lt;/span&gt;
&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;The quick brown fox jumped over the lazy brown bear.&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Apply regex&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Find anything with a &amp;#39;T&amp;#39; and then the next two characters&lt;/span&gt;
&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;r&amp;#39;T..&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[&amp;#39;The&amp;#39;]
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Basics"></category></entry><entry><title>Match Any Of A List Of Characters</title><link href="http://chrisalbon.com/regex/match_any_of_a_list_of_symbols.html" rel="alternate"></link><published>2016-05-01T12:00:00-07:00</published><updated>2016-05-01T12:00:00-07:00</updated><author><name>Chris Albon</name></author><id>tag:chrisalbon.com,2016-05-01:regex/match_any_of_a_list_of_symbols.html</id><summary type="html">&lt;p&gt;Based on: &lt;a href="http://shop.oreilly.com/product/0636920023630.do"&gt;Regular Expressions Cookbook&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Preliminaries&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Load regex package&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Create some text&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Create a variable containing a text string&lt;/span&gt;
&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;The quick brown fox jumped over the lazy brown bear.&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Apply regex&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Find all instances of any vowel&lt;/span&gt;
&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;r&amp;#39;[aeiou]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[&amp;#39;e&amp;#39;, &amp;#39;u&amp;#39;, &amp;#39;i&amp;#39;, &amp;#39;o&amp;#39;, &amp;#39;o&amp;#39;, &amp;#39;u&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;o&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;a&amp;#39;, &amp;#39;o&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;a&amp;#39;]
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Basics"></category></entry><entry><title>Match Any Of A Series Of Options</title><link href="http://chrisalbon.com/regex/match_any_of_series_of_characters.html" rel="alternate"></link><published>2016-05-01T12:00:00-07:00</published><updated>2016-05-01T12:00:00-07:00</updated><author><name>Chris Albon</name></author><id>tag:chrisalbon.com,2016-05-01:regex/match_any_of_series_of_characters.html</id><summary type="html">&lt;p&gt;Based on: &lt;a href="http://shop.oreilly.com/product/0636920023630.do"&gt;Regular Expressions Cookbook&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Preliminaries&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Load regex package&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Create some text&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Create a variable containing a text string&lt;/span&gt;
&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;The quick brown fox jumped over the lazy brown bear.&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Apply regex&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Find any of fox, snake, or bear&lt;/span&gt;
&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;r&amp;#39;fox|snake|bear&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[&amp;#39;fox&amp;#39;, &amp;#39;bear&amp;#39;]
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Basics"></category></entry><entry><title>Match Any Of A Series Of Words</title><link href="http://chrisalbon.com/regex/match_any_of_series_of_words.html" rel="alternate"></link><published>2016-05-01T12:00:00-07:00</published><updated>2016-05-01T12:00:00-07:00</updated><author><name>Chris Albon</name></author><id>tag:chrisalbon.com,2016-05-01:regex/match_any_of_series_of_words.html</id><summary type="html">&lt;p&gt;Based on: &lt;a href="http://shop.oreilly.com/product/0636920023630.do"&gt;Regular Expressions Cookbook&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Preliminaries&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Load regex package&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Create some text&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Create a variable containing a text string&lt;/span&gt;
&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;The quick brown fox jumped over the lazy brown bear.&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Apply regex&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Find any of fox, snake, or bear&lt;/span&gt;
&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;r&amp;#39;\b(fox|snake|bear)\b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[&amp;#39;fox&amp;#39;, &amp;#39;bear&amp;#39;]
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Basics"></category></entry><entry><title>Match Dates</title><link href="http://chrisalbon.com/regex/match_dates.html" rel="alternate"></link><published>2016-05-01T12:00:00-07:00</published><updated>2016-05-01T12:00:00-07:00</updated><author><name>Chris Albon</name></author><id>tag:chrisalbon.com,2016-05-01:regex/match_dates.html</id><summary type="html">&lt;p&gt;Based on: &lt;a href="http://shop.oreilly.com/product/0636920023630.do"&gt;Regular Expressions Cookbook&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Preliminaries&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Load regex package&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Create some text&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Create a variable containing a text string&lt;/span&gt;
&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;My birthday is 09/15/1983. My brother&lt;/span&gt;&lt;span class="se"&gt;\&amp;#39;&lt;/span&gt;&lt;span class="s1"&gt;s birthday is 01/01/01. My other two brothers have birthdays of 9/3/2001 and 09/1/83.&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Apply regex&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Find any text that fits the regex&lt;/span&gt;
&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;r&amp;#39;\b[0-3]?[0-9]/[0-3]?[0-9]/(?:[0-9]{2})?[0-9]{2}\b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[&amp;#39;09/15/1983&amp;#39;, &amp;#39;01/01/01&amp;#39;, &amp;#39;9/3/2001&amp;#39;, &amp;#39;09/1/83&amp;#39;]
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Basics"></category></entry><entry><title>Match Email Addresses</title><link href="http://chrisalbon.com/regex/match_email_addresses.html" rel="alternate"></link><published>2016-05-01T12:00:00-07:00</published><updated>2016-05-01T12:00:00-07:00</updated><author><name>Chris Albon</name></author><id>tag:chrisalbon.com,2016-05-01:regex/match_email_addresses.html</id><summary type="html">&lt;p&gt;Based on: &lt;a href="http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address"&gt;StackOverflow&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Preliminaries&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Load regex package&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Create some text&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Create a variable containing a text string&lt;/span&gt;
&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="s1"&gt;&amp;#39;My email is chris@hotmail.com, thanks! No, I am at bob@data.ninja.&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Apply regex&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Find all email addresses&lt;/span&gt;
&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;r&amp;#39;[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9]+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Explanation:&lt;/span&gt;
&lt;span class="c1"&gt;# This regex has three parts&lt;/span&gt;
&lt;span class="c1"&gt;# [a-zA-Z0-9_.+-]+ Matches a word (the username) of any length&lt;/span&gt;
&lt;span class="c1"&gt;# @[a-zA-Z0-9-]+  Matches a word (the domain name) of any length&lt;/span&gt;
&lt;span class="c1"&gt;# \.[a-zA-Z0-9-.]+ Matches a word (the TLD) of any length&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[&amp;#39;chris@hotmail.com&amp;#39;, &amp;#39;bob@data.ninja&amp;#39;]
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Basics"></category></entry><entry><title>Match Exact Text</title><link href="http://chrisalbon.com/regex/match_exact_text.html" rel="alternate"></link><published>2016-05-01T12:00:00-07:00</published><updated>2016-05-01T12:00:00-07:00</updated><author><name>Chris Albon</name></author><id>tag:chrisalbon.com,2016-05-01:regex/match_exact_text.html</id><summary type="html">&lt;p&gt;Based on: &lt;a href="http://shop.oreilly.com/product/0636920023630.do"&gt;Regular Expressions Cookbook&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Preliminaries&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Load regex package&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Create some text&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Create a variable containing a text string&lt;/span&gt;
&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;The quick brown fox jumped over the lazy brown bear.&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Apply regex&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Find all instances of the exact match &amp;#39;The&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;r&amp;#39;The&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[&amp;#39;The&amp;#39;]
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Basics"></category></entry></feed>